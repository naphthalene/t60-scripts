#!/usr/bin/python

import dbus, os, sys
import subprocess
import codecs

class Status(object):
    def __init__(self, metadata):
        self._metadata = metadata
        
    @property
    def artists(self):
        return ",".join(self._metadata['xesam:artist'])

    @property
    def title(self):
        return self._metadata['xesam:title']

    def notify(self):
        subprocess.Popen(['notify-send', self.artists, self.title])

    def __unicode__(self):
        return "[%s] - %s" % (self.artists, self.title)


def main():
    stat = None
    try:
        sbus = dbus.SessionBus()
        proxy = sbus.get_object(
            "org.mpris.MediaPlayer2.spotify",
            "/org/mpris/MediaPlayer2")
        pman = dbus.Interface(proxy, 'org.freedesktop.DBus.Properties')
        stat = Status(pman.Get('org.mpris.MediaPlayer2.Player', 'Metadata'))
    except:
        pass
    
    with codecs.open(os.path.join(os.path.dirname(os.path.realpath(__file__)),
                                      'var/spotifysong'), 
                         'r+',
                         'utf-8-sig') as song:
        if stat:
            if unicode(stat) <> song.read():
                stat.notify()
                song.seek(0)
                song.truncate()
                song.write(unicode(stat))
            else:
                print unicode(stat)
        else:
            print "Not even playing fool"
    try:
        "notify" == sys.argv[1]
        stat.notify()
    except:
        pass


if __name__ == "__main__":
    main()
